{"version":3,"sources":["components/navbar.jsx","components/counter.jsx","components/counters.jsx","App.js","reportWebVitals.js","index.js"],"names":["NavBar","totalCounters","className","Counter","this","props","id","getBadgeClasses","formateCount","onClick","onIncrement","counter","onDelete","classes","value","count","Component","Counters","onReset","counters","map","App","state","handleIncrement","index","indexOf","console","log","setState","handelDelete","counterId","filter","c","handleReset","Fragment","length","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"wPAUeA,EARF,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,cACX,OAAS,qBAAKC,UAAU,+BAAf,SACT,oBAAGA,UAAU,eAAb,oBACW,sBAAMA,UAAU,mCAAhB,SAAoDD,UCqCpDE,G,6KAxBD,IAAD,OACL,OAAW,gCACH,6BAAKC,KAAKC,MAAMC,KACpB,sBAAMJ,UAAWE,KAAKG,kBAAtB,SAA0CH,KAAKI,iBAC/C,wBAAQC,QAAS,kBAAI,EAAKJ,MAAMK,YAAY,EAAKL,MAAMM,UAAWT,UAAU,2BAA5E,uBACA,wBAAQO,QAAS,kBAAI,EAAKJ,MAAMO,SAAS,EAAKP,MAAMM,QAAQL,KAAKJ,UAAU,4BAA3E,yB,wCAQJ,IAAIW,EAAU,mBAEd,OADAA,GAAyC,IAA7BT,KAAKC,MAAMM,QAAQG,MAAe,UAAY,Y,qCAI/C,IACGC,EAAOX,KAAKC,MAAMM,QAAzBG,MACP,OAAe,IAARC,EAAY,wCAAkBA,M,GArCvBC,cCmBPC,E,uKAhBD,IAAD,EACyCb,KAAKC,MAA5Ca,EADF,EACEA,QAAQC,EADV,EACUA,SAASP,EADnB,EACmBA,SAASF,EAD5B,EAC4BA,YACjC,OAAQ,gCACJ,wBACAD,QAASS,EACThB,UAAU,6BAFV,mBAGCiB,EAASC,KAAI,SAAAT,GAAO,OACrB,cAAC,EAAD,CACAC,SAAUA,EACVF,YAAaA,EACbC,QAASA,GAHKA,EAAQL,c,GATXU,aCkDRK,E,4MA9CbC,MAAQ,CACNH,SAAS,CACL,CAACb,GAAG,EAAEQ,MAAM,GACZ,CAACR,GAAG,EAAEQ,MAAM,GACZ,CAACR,GAAG,EAAEQ,MAAM,GACZ,CAACR,GAAG,EAAEQ,MAAM,K,EAInBS,gBAAgB,SAACZ,GACd,IAAMQ,EAAS,YAAI,EAAKG,MAAMH,UACxBK,EAAML,EAASM,QAAQd,GAC7BQ,EAASK,GAAOV,QAChBY,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAACT,c,EAIlBU,aAAa,SAACC,GACVJ,QAAQC,IAAI,uBAAuBG,GACnC,IAAMX,EAAS,EAAKG,MAAMH,SAASY,QAAO,SAAAC,GAAC,OAAGA,EAAE1B,KAAMwB,KACtD,EAAKF,SAAS,CAACT,c,EAEnBc,YAAY,WACR,IAAMd,EAAS,EAAKG,MAAMH,SAASC,KAAI,SAAAY,GAEpC,OADCA,EAAElB,MAAM,EACFkB,KACV,EAAKJ,SAAS,CAACT,SAASA,K,uDAI3B,OACE,eAAC,IAAMe,SAAP,WACG,cAAC,EAAD,CAAQjC,cAAeG,KAAKkB,MAAMH,SAASY,QAAO,SAAAC,GAAC,OAAEA,EAAElB,SAAOqB,SAChE,sBAAMjC,UAAU,YAAhB,SACE,cAAC,EAAD,CACAiB,SAAUf,KAAKkB,MAAMH,SACrBD,QAASd,KAAK6B,YACdvB,YAAaN,KAAKmB,gBAClBX,SAAUR,KAAKyB,wB,GAxCJb,aCOHoB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,MCCdQ,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d508245b.chunk.js","sourcesContent":["import React, { Component } from 'react'\n\nconst NavBar=({totalCounters})=>{\n    return ( <nav className=\"navbar navbar-light bg-light\">\n    <a className='navbar-brand'>\n        Navbar <span className=\"badge badge-pill badge-secondary\">{totalCounters}</span>\n    </a>\n</nav> );\n}\n\nexport default NavBar ;","import React, { Component } from 'react'\nclass Counter extends Component {\n    // state={\n    //     value:this.props.counter.value,\n    //     tags:['tag1','tag2','tag3']\n    //     // imageUrl:\"https://picsum.photos/200\"\n    // };\n\n    // constructor(){\n    //     super();\n    //     this.handleIncrement=  this.handleIncrement.bind(this);\n    // }\n    // handleIncrement=()=>{\n    //     // this.state.count++;\n    //     this.setState({value:this.state.value + 1});\n    \n    // }\n\n    render() { \n        return (   <div>\n                <h1>{this.props.id}</h1>\n            <span className={this.getBadgeClasses()}>{this.formateCount()}</span>\n            <button onClick={()=>this.props.onIncrement(this.props.counter)}  className=\"btn btn-secondary btn-sm\">Increment</button>\n            <button onClick={()=>this.props.onDelete(this.props.counter.id)} className=\"btn btn-danger btn-sm m-2\" >Delete</button>\n            \n            {/* <ul>\n                {this.state.tags.map(tag=><li key={tag}>{tag}</li>)}\n            </ul> */}\n         </div> );\n    }\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += (this.props.counter.value === 0) ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formateCount(){\n        const {value: count}=this.props.counter;\n        return count===0 ? <span>Zero</span>:count;\n    }\n}\n \nexport default Counter;","import React, { Component } from 'react';\nimport Counter from \"./counter\";\nclass Counters extends Component {\n   \n    render() { \n        const {onReset,counters,onDelete,onIncrement}=this.props; //object distructreing\n        return (<div>\n            <button \n            onClick={onReset}\n            className=\"btn btn-primary btn-sm m-2\">Reset</button>\n            {counters.map(counter=>\n            <Counter key={counter.id} \n            onDelete={onDelete} \n            onIncrement={onIncrement}\n            counter={counter}\n             />)}\n        </div> );\n    }\n}\n \nexport default Counters;","import NavBar from './components/navbar';\nimport './App.css';\nimport Counters from './components/counters';\nimport Counter from './components/counter';\nimport React, { Component } from 'react';\nclass App extends Component {\n  state = {\n    counters:[\n        {id:1,value:4},\n        {id:2,value:0},\n        {id:3,value:0},\n        {id:4,value:0}\n    ]\n }\n\n handleIncrement=(counter)=>{\n    const counters=[...this.state.counters];\n    const index=counters.indexOf(counter);\n    counters[index].value++;\n    console.log(index);\n    this.setState({counters})\n\n }\n\n handelDelete=(counterId)=>{\n     console.log(\"enven handler called\",counterId);\n     const counters=this.state.counters.filter(c=> c.id !==counterId);\n     this.setState({counters});\n }\n handleReset=()=>{\n     const counters=this.state.counters.map(c=>{\n         c.value=0;\n        return c})\n     this.setState({counters:counters})\n }\n\nrender(){\n  return (\n    <React.Fragment>\n       <NavBar totalCounters={this.state.counters.filter(c=>c.value).length}/>\n     <main className=\"container\">\n       <Counters \n       counters={this.state.counters}\n       onReset={this.handleReset}\n       onIncrement={this.handleIncrement}\n       onDelete={this.handelDelete} />\n     </main>\n    </React.Fragment>\n    );\n}\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.css';\n// import Counters from './components/counters'\n\nReactDOM.render(\n <App/>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}